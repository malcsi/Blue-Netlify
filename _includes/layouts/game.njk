<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Glass Website</title>
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Monoton&display=swap"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      main {
        font-family: "Ubuntu", sans-serif;
        font-weight: 600;
        min-height: 100vh;
        background: linear-gradient(to right top, #65dfc9, #6cdbeb);
      }
      .container {
        display: grid;
        grid-template-columns: repeat(3, 8vw) repeat(4, 15.5vw) 10vw;
        grid-template-rows: 10vh repeat(6, 12vh) 10vh;
        grid-column-gap: 10px;
        grid-row-gap: 10px;
      }

      .logo {
        grid-area: 2 / 2 / 4 / 4;
        font-family: "Monoton";
        z-index: 3;
        text-align: center;
        margin-top: 30px;
        font-size: 2vw;
      }
      .logo img {
        width: 8em;
      }
      .home,
      .projects,
      .blog,
      .feedback {
        z-index: 5;
        text-align: center;
      }
      .home a,
      .projects a,
      .blog a,
      .feedback a {
        color: #57575d;
        text-decoration: none;
        font-size: 2vw;
        padding: 10px 25px;
        border: 1 px solid;
        border-radius: 20px;
        background: white;
        background: linear-gradient(
          to right bottom,
          rgba(255, 255, 255, 0.8),
          rgba(255, 255, 255, 0.199)
        );
      }
      .home a:hover,
      .projects a:hover,
      .blog a:hover,
      .feedback a:hover {
        background-color: white;
        padding: 16px 32px;
      }
      .welcome {
        text-align: center;
        color: #57575d;
        font-size: 2.5em;
        animation: text 5s forwards;
      }
      @keyframes text {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      .home {
        grid-area: 4 / 2 / 5 / 4;
        animation: slide-in-top 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
      }
      @keyframes slide-in-top {
        0% {
          transform: translateY(-1000px);
          opacity: 0;
        }
        100% {
          transform: translateY(0);
          opacity: 1;
        }
      }
      .projects {
        grid-area: 5 / 2 / 6 / 4;
        animation: slide-in-top 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.5s
          both;
      }
      .blog {
        grid-area: 6 / 2 / 7 / 4;
        animation: slide-in-top 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1s
          both;
      }
      .feedback {
        grid-area: 7 / 2 / 8 / 4;
        animation: slide-in-top 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1.5s
          both;
      }
      .base {
        grid-area: 4 / 4 / 8 / 8;
        background: white;
        z-index: 2;
        background: linear-gradient(
          to right bottom,
          rgba(255, 255, 255, 0.8),
          rgba(255, 255, 255, 0.199)
        );
        border-radius: 30px;
        overflow-y: hidden;
        height: 100%;
      }
      .base p {
        margin: 5%;
      }
      .glass {
        grid-area: 2 / 2 / 8 / 8;
        background: white;
        background: linear-gradient(
          to right bottom,
          rgba(255, 255, 255, 0.7),
          rgba(255, 255, 255, 0.3)
        );
        border-radius: 2rem;
        backdrop-filter: blur(2rem);
      }
      .text h4 {
        animation: welcome 3s ease-in-out both;
        flex: 1;
      }
      .text p {
        flex: 2;
        font-size: 2.4vw;
        color: #57575d;
        animation: welcome 3s ease-in-out both;
      }
      @keyframes welcome {
        0% {
          transform: translateX(-100px);
          opacity: 0;
        }
        100% {
          transform: translateX(0);
          opacity: 1;
        }
      }
      .text {
        grid-area: 2 / 4 / 4 / 8;
        padding: 0.9rem 1rem;
        background: linear-gradient(
          to right bottom,
          rgba(255, 255, 255, 0.7),
          rgba(255, 255, 255, 0.3)
        );
        border: 1px solid transparent;
        border-radius: 2em;
        z-index: 3;
        list-style: none;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      .score {
        color: #57575d;
        margin-top: 3%;
        display: flex;
        justify-content: space-around;
        align-items: center;
      }
      .score p {
        text-align: center;
        padding: 10px;
        font-size: 25px;
      }

      .intro {
        color: #57575d;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
        transition: opacity 0.5s ease;
      }

      .intro h1 {
        font-size: 50px;
      }

      .intro button,
      .match button {
        width: 150px;
        height: 50px;
        border: none;
        margin-top: 15%;
        color: rgb(247, 233, 233);
        font-size: 20px;
        background-color: #377a85;
        border-radius: 3px;
        cursor: pointer;
        z-index: 5;
      }

      .match {
        transition: opacity 0.5s ease 0.5s;
        z-index: 5;
      }

      .winner {
        color: #57575d;
        text-align: center;
        font-size: 20px;
        margin-top: 5%;
      }
      .hands,
      .options {
        display: flex;
        justify-content: space-around;
        align-items: center;
      }
      .options {
        margin-top: -23%;
      }
      .hands {
        margin: auto;
        width: 80%;
      }
      .hands img {
        margin-bottom: 5%;
      }
      .player-hand {
        transform: rotateY(180deg);
        z-index: 5;
      }

      div.fadeOut {
        opacity: 0;
        pointer-events: none;
      }
      div.fadeIn {
        opacity: 1;
        pointer-events: all;
        margin-top: -30%;
      }
      @keyframes shakePlayer {
        0% {
          transform: rotateY(180deg) translateY(0px);
        }
        15% {
          transform: rotateY(180deg) translateY(-50px);
        }
        25% {
          transform: rotateY(180deg) translateY(0px);
        }
        35% {
          transform: rotateY(180deg) translateY(-50px);
        }
        50% {
          transform: rotateY(180deg) translateY(0px);
        }
        65% {
          transform: rotateY(180deg) translateY(-50px);
        }
        75% {
          transform: rotateY(180deg) translateY(0px);
        }
        85% {
          transform: rotateY(180deg) translateY(-50px);
        }
        100% {
          transform: rotateY(180deg) translateY(0px);
        }
      }

      @keyframes shakeComputer {
        0% {
          transform: translateY(0px);
        }
        15% {
          transform: translateY(-50px);
        }
        25% {
          transform: translateY(0px);
        }
        35% {
          transform: translateY(-50px);
        }
        50% {
          transform: translateY(0px);
        }
        65% {
          transform: translateY(-50px);
        }
        75% {
          transform: translateY(0px);
        }
        85% {
          transform: translateY(-50px);
        }
        100% {
          transform: translateY(0px);
        }
      }
      @media only screen and (max-width: 900px) {
        .container {
          grid-template-columns: repeat(2, 1fr);
          grid-template-rows: 1fr repeat(2, 0.4fr) 1fr 0.5fr repeat(3, 1fr);
          grid-column-gap: 0px;
          grid-row-gap: 6px;
        }
        .logo {
          grid-area: 1 / 1 / 2 / 4;
        }
        .logo img {
          width: 12rem;
        }
        .home {
          grid-area: 2 / 1 / 3 / 2;
        }
        .projects {
          grid-area: 3 / 1 / 4 / 2;
        }
        .blog {
          grid-area: 2 / 2 / 3 / 3;
        }
        .feedback {
          grid-area: 3 / 2 / 4 / 3;
        }
        .text {
          grid-area: 4 / 1 / 6 / 3;
        }
        .text p {
          font-size: 2em;
        }
        .base {
          grid-area: 6 / 1 / 9 / 3;
        }
        .glass {
          grid-area: 1 / 1 / 9 / 3;
          margin-top: 20px;
        }
        .home a,
        .projects a,
        .blog a,
        .feedback a {
          font-size: 1.4em;
        }
      }
    </style>
  </head>
  <body>
    <main>
      <div class="container">
        <div class="logo">
          <a href="https://ana-horhoianu.netlify.app/"
            ><img
              src="https://i.ibb.co/cxs25TL/output-onlinepngtools-1.png"
              alt="logo"
          /></a>
        </div>
        <div class="home">
          <a href="https://ana-horhoianu.netlify.app/">Home</a>
        </div>
        <div class="projects">
          <a href="https://ana-horhoianu.netlify.app/projects">Projects</a>
        </div>
        <div class="blog">
          <a href="https://ana-horhoianu.netlify.app/posts">Blog</a>
        </div>
        <div class="feedback">
          <a href="https://ana-horhoianu.netlify.app//projects/feedback/"
            >Feedback</a
          >
        </div>
        <div class="text">
          <img class="pencil" src="pencil.gif" alt="" />
          <p>{{ title }}</p>
          <h4>{{ post.data.description }}</h4>
        </div>
        <div class="base">
          <section class="game">
            <div class="score">
              <div class="player-score">
                <h2>Player</h2>
                <p>0</p>
              </div>
              <div class="computer-score">
                <h2>Computer</h2>
                <p>0</p>
              </div>
            </div>

            <div class="intro">
              <button>Let's Play</button>
            </div>

            <div class="match fadeOut">
              <h2 class="winner">Choose an option</h2>
              <div class="hands">
                <img
                  class="player-hand"
                  src="images/uploads/assets/rock.png"
                  alt=""
                />
                <img
                  class="computer-hand"
                  src="images/uploads/assets/rock.png"
                  alt=""
                />
              </div>
              <div class="options">
                <button class="rock">rock</button>
                <button class="paper">paper</button>
                <button class="scissors">scissors</button>
              </div>
            </div>
          </section>
        </div>
        <div class="glass"></div>
      </div>
    </main>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
      integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js"
      integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT"
      crossorigin="anonymous"
    ></script>
    <script>
      const game = () => {
        let pScore = 0;
        let cScore = 0;

        //Start the Game
        const startGame = () => {
          const playBtn = document.querySelector(".intro button");
          const introScreen = document.querySelector(".intro");
          const match = document.querySelector(".match");

          playBtn.addEventListener("click", () => {
            introScreen.classList.add("fadeOut");
            match.classList.add("fadeIn");
          });
        };
        //Play Match
        const playMatch = () => {
          const options = document.querySelectorAll(".options button");
          const playerHand = document.querySelector(".player-hand");
          const computerHand = document.querySelector(".computer-hand");
          const hands = document.querySelectorAll(".hands img");

          hands.forEach((hand) => {
            hand.addEventListener("animationend", function () {
              this.style.animation = "";
            });
          });
          //Computer Options
          const computerOptions = ["rock", "paper", "scissors"];

          options.forEach((option) => {
            option.addEventListener("click", function () {
              //Computer Choice
              const computerNumber = Math.floor(Math.random() * 3);
              const computerChoice = computerOptions[computerNumber];

              setTimeout(() => {
                //Here is where we call compare hands
                compareHands(this.textContent, computerChoice);
                //Update Images
                playerHand.src = `images/uploads/assets/${this.textContent}.png`;
                computerHand.src = `.images/uploads/assets/${computerChoice}.png`;
              }, 2000);
              //Animation
              playerHand.style.animation = "shakePlayer 2s ease";
              computerHand.style.animation = "shakeComputer 2s ease";
            });
          });
        };

        const updateScore = () => {
          const playerScore = document.querySelector(".player-score p");
          const computerScore = document.querySelector(".computer-score p");
          playerScore.textContent = pScore;
          computerScore.textContent = cScore;
        };

        const compareHands = (playerChoice, computerChoice) => {
          //Update text
          const winner = document.querySelector(".winner");
          //Checking for a tie means
          if (playerChoice === computerChoice) {
            winner.textContent = "It is a tie!";
            return;
          }
          //Check for rock
          if (playerChoice === "rock") {
            if (computerChoice === "scissors") {
              winner.textContent = "Player Wins";
              pScore++;
              updateScore();
              return;
            } else {
              winner.textContent = "Computer Wins";
              cScore++;
              updateScore();
              return;
            }
          }
          //Check for paper
          if (playerChoice === "paper") {
            if (computerChoice === "scissors") {
              winner.textContent = "Computer Wins";
              cScore++;
              updateScore();
              return;
            } else {
              winner.textContent = "Player Wins";
              pScore++;
              updateScore();
              return;
            }
          }
          //Check for scissors
          if (playerChoice === "scissors") {
            if (computerChoice === "rock") {
              winner.textContent = "Computer Wins";
              cScore++;
              updateScore();
              return;
            } else {
              winner.textContent = "Player Wins";
              pScore++;
              updateScore();
              return;
            }
          }
        };

        startGame();
        playMatch();
      };

      game();
    </script>
  </body>
</html>
